{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport colors from \"../constants/colors\";\nimport AddButton from \"../components/AddButton\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar IndexCal = function IndexCal(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDay = _useState2[0],\n      setSelectedDay = _useState2[1];\n\n  var mark = _defineProperty({}, selectedDay, {\n    selected: true,\n    selectedColor: colors.accBlue\n  });\n\n  function setDay(day) {\n    console.log(\"function: \" + day);\n    setSelectedDay(day);\n  }\n\n  return _jsxs(View, {\n    style: styles.imageBox,\n    children: [_jsx(View, {\n      style: styles.calBox,\n      children: _jsx(Calendar, {\n        markingType: \"period\",\n        markedDates: {\n          \"2022-05-20\": {\n            textColor: \"green\"\n          },\n          \"2022-05-22\": {\n            startingDay: true,\n            color: \"green\"\n          },\n          \"2022-05-23\": {\n            selected: true,\n            endingDay: true,\n            color: \"green\",\n            textColor: \"gray\"\n          },\n          \"2022-05-04\": {\n            disabled: true,\n            startingDay: true,\n            color: \"green\",\n            endingDay: true\n          }\n        },\n        onDayPress: function onDayPress(day) {\n          var date = day.dateString;\n          setDay(date);\n        },\n        onMonthChange: function onMonthChange(month) {\n          console.log(\"month changed\", month);\n        },\n        hideExtraDays: true,\n        firstDay: 1,\n        onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n          return subtractMonth();\n        },\n        onPressArrowRight: function onPressArrowRight(addMonth) {\n          return addMonth();\n        },\n        disableAllTouchEventsForDisabledDays: true,\n        enableSwipeMonths: true\n      })\n    }), _jsx(View, {\n      style: styles.addButton,\n      children: _jsx(AddButton, {\n        icon: \"plus\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  imageBox: {\n    height: \"100%\"\n  },\n  calBox: {\n    paddingTop: 75\n  },\n  addButton: {\n    alignItems: \"flex-end\",\n    margin: 20\n  }\n});\nexport default IndexCal;","map":{"version":3,"sources":["/Users/josieincase/Documents/ProjektB/PeriodTracker/screens/IndexCal.js"],"names":["React","useState","colors","AddButton","Calendar","CalendarList","Agenda","IndexCal","props","selectedDay","setSelectedDay","mark","selected","selectedColor","accBlue","setDay","day","console","log","styles","imageBox","calBox","textColor","startingDay","color","endingDay","disabled","date","dateString","month","subtractMonth","addMonth","addButton","StyleSheet","create","height","paddingTop","alignItems","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,QAA+C,wBAA/C;;;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,kBAAsCP,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAIC,IAAI,uBACLF,WADK,EACS;AAAEG,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,aAAa,EAAEX,MAAM,CAACY;AAAxC,GADT,CAAR;;AAIA,WAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,GAA3B;AACAN,IAAAA,cAAc,CAACM,GAAD,CAAd;AACD;;AACD,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,QAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA,gBACE,KAAC,QAAD;AACE,QAAA,WAAW,EAAE,QADf;AAEE,QAAA,WAAW,EAAE;AACX,wBAAc;AAAEC,YAAAA,SAAS,EAAE;AAAb,WADH;AAEX,wBAAc;AAAEC,YAAAA,WAAW,EAAE,IAAf;AAAqBC,YAAAA,KAAK,EAAE;AAA5B,WAFH;AAGX,wBAAc;AACZZ,YAAAA,QAAQ,EAAE,IADE;AAEZa,YAAAA,SAAS,EAAE,IAFC;AAGZD,YAAAA,KAAK,EAAE,OAHK;AAIZF,YAAAA,SAAS,EAAE;AAJC,WAHH;AASX,wBAAc;AACZI,YAAAA,QAAQ,EAAE,IADE;AAEZH,YAAAA,WAAW,EAAE,IAFD;AAGZC,YAAAA,KAAK,EAAE,OAHK;AAIZC,YAAAA,SAAS,EAAE;AAJC;AATH,SAFf;AAmBE,QAAA,UAAU,EAAE,oBAACT,GAAD,EAAS;AACnB,cAAMW,IAAI,GAAGX,GAAG,CAACY,UAAjB;AACAb,UAAAA,MAAM,CAACY,IAAD,CAAN;AACD,SAtBH;AAwBE,QAAA,aAAa,EAAE,uBAACE,KAAD,EAAW;AACxBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,KAA7B;AACD,SA1BH;AA4BE,QAAA,aAAa,EAAE,IA5BjB;AA8BE,QAAA,QAAQ,EAAE,CA9BZ;AAgCE,QAAA,gBAAgB,EAAE,0BAACC,aAAD;AAAA,iBAAmBA,aAAa,EAAhC;AAAA,SAhCpB;AAkCE,QAAA,iBAAiB,EAAE,2BAACC,QAAD;AAAA,iBAAcA,QAAQ,EAAtB;AAAA,SAlCrB;AAoCE,QAAA,oCAAoC,EAAE,IApCxC;AAsCE,QAAA,iBAAiB,EAAE;AAtCrB;AADF,MADF,EA2CE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA,gBACE,KAAC,SAAD;AAAW,QAAA,IAAI,EAAC;AAAhB;AADF,MA3CF;AAAA,IADF;AAiDD,CA3DD;;AA6DA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,QAAQ,EAAE;AACRe,IAAAA,MAAM,EAAE;AADA,GADqB;AAI/Bd,EAAAA,MAAM,EAAE;AACNe,IAAAA,UAAU,EAAE;AADN,GAJuB;AAO/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,UAAU,EAAE,UADH;AAETC,IAAAA,MAAM,EAAE;AAFC;AAPoB,CAAlB,CAAf;AAaA,eAAe/B,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, TextInput, Pressable, Animated } from \"react-native\";\nimport colors from \"../constants/colors\";\nimport AddButton from \"../components/AddButton\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\n\n// TODO: Set minDay to first entry-month\n\nconst IndexCal = (props) => {\n  const [selectedDay, setSelectedDay] = useState(\"\");\n  let mark = {\n    [selectedDay]: { selected: true, selectedColor: colors.accBlue },\n  };\n\n  function setDay(day) {\n    console.log(\"function: \" + day);\n    setSelectedDay(day);\n  }\n  return (\n    <View style={styles.imageBox}>\n      <View style={styles.calBox}>\n        <Calendar\n          markingType={\"period\"}\n          markedDates={{\n            \"2022-05-20\": { textColor: \"green\" },\n            \"2022-05-22\": { startingDay: true, color: \"green\" },\n            \"2022-05-23\": {\n              selected: true,\n              endingDay: true,\n              color: \"green\",\n              textColor: \"gray\",\n            },\n            \"2022-05-04\": {\n              disabled: true,\n              startingDay: true,\n              color: \"green\",\n              endingDay: true,\n            },\n          }}\n          // minDate={\"2012-05-10\"}\n          onDayPress={(day) => {\n            const date = day.dateString;\n            setDay(date);\n          }}\n          // Handler which gets executed when visible month changes in calendar. Default = undefined\n          onMonthChange={(month) => {\n            console.log(\"month changed\", month);\n          }}\n          // Do not show days of other months in month page. Default = false\n          hideExtraDays={true}\n          // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday\n          firstDay={1}\n          // Handler which gets executed when press arrow icon left. It receive a callback can go back month\n          onPressArrowLeft={(subtractMonth) => subtractMonth()}\n          // Handler which gets executed when press arrow icon right. It receive a callback can go next month\n          onPressArrowRight={(addMonth) => addMonth()}\n          // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates\n          disableAllTouchEventsForDisabledDays={true}\n          // Enable the option to swipe between months. Default = false\n          enableSwipeMonths={true}\n        />\n      </View>\n      <View style={styles.addButton}>\n        <AddButton icon=\"plus\" />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageBox: {\n    height: \"100%\",\n  },\n  calBox: {\n    paddingTop: 75,\n  },\n  addButton: {\n    alignItems: \"flex-end\",\n    margin: 20,\n  },\n});\n\nexport default IndexCal;\n"]},"metadata":{},"sourceType":"module"}